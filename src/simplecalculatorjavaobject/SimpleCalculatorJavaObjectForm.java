


        // [ " CRIADOR: LUIZ ÂNGELO MARTINS " ]:



// PACOTE DA CLASSE:
package simplecalculatorjavaobject;


// IMPORTAÇÃO DE BIBLIOTECAS:
import java.math.BigDecimal;
import java.math.RoundingMode;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.plaf.basic.BasicComboBoxRenderer;


// MÉTODO PRINCIPAL DA CLASSE:
public class SimpleCalculatorJavaObjectForm extends javax.swing.JFrame {

    
    // DECLARAÇÃO DE VARIAVEIS E OBJETOS:
    BasicComboBoxRenderer.UIResource UIResource = new BasicComboBoxRenderer.UIResource();  
    
    
    // " INICIALIZADOR ":
    public SimpleCalculatorJavaObjectForm() {
        
        initComponents();
        ImageIcon icone = new ImageIcon(getClass().getResource("/icones/calculator_add.png"));
        setIconImage(icone.getImage());
        txt_botao_limpar_e_liberar.setEnabled(false);
        
        txt_campo_valor1.setText("");
        txt_campo_valor2.setText("");
        txt_campo_radiciacao.setText("");
        txt_campo_potencia_base.setText("");
        txt_campo_potencia_expoente.setText("");
                
        txt_campo_resultado.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        txt_campo_potencia_base.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        txt_campo_potencia_expoente.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        txt_campo_radiciacao.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        txt_campo_valor1.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        txt_campo_valor2.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        
        UIResource.setHorizontalAlignment(SwingConstants.CENTER);  
        txt_operacao.setRenderer(UIResource);
        txt_operacao.removeAllItems();
        
        int contador_numerico = 0;
        while( contador_numerico != 6 ) {
        
            if( contador_numerico == 0 ) { txt_operacao.addItem("DIVISÃO"); }
            if( contador_numerico == 1 ) { txt_operacao.addItem("MULTIPLICAÇÃO"); }
            if( contador_numerico == 2 ) { txt_operacao.addItem("POTÊNCIAÇÃO"); }
            if( contador_numerico == 3 ) { txt_operacao.addItem("RADICIAÇÃO"); }
            if( contador_numerico == 4 ) { txt_operacao.addItem("SOMA"); }
            if( contador_numerico == 5 ) { txt_operacao.addItem("SUBTRAÇÃO"); }
            contador_numerico++;
            
        }
        
        txt_operacao.setSelectedIndex(4);
        
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_painel_principal = new javax.swing.JPanel();
        txt_botao_limpar_e_liberar = new javax.swing.JButton();
        txt_botao_calcular = new javax.swing.JButton();
        txt_campo_resultado = new javax.swing.JLabel();
        txt_operacao = new javax.swing.JComboBox<>();
        txt_campo_valor1 = new javax.swing.JTextField();
        txt_campo_valor2 = new javax.swing.JTextField();
        txt_campo_radiciacao = new javax.swing.JTextField();
        txt_campo_potencia_base = new javax.swing.JTextField();
        txt_campo_potencia_expoente = new javax.swing.JTextField();
        txt_barra_de_menu_principal = new javax.swing.JMenuBar();
        txt_menu_geral = new javax.swing.JMenu();
        txt_sub_item_sair = new javax.swing.JMenuItem();
        txt_menu_sobre = new javax.swing.JMenu();
        txt_sub_item_info = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("CALCULADORA SIMPLES");
        setResizable(false);

        txt_painel_principal.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "- EXIBIÇÃO GERAL -", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        txt_botao_limpar_e_liberar.setBackground(new java.awt.Color(153, 153, 255));
        txt_botao_limpar_e_liberar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/calculator_delete.png"))); // NOI18N
        txt_botao_limpar_e_liberar.setText("LIMPAR E LIBERAR");
        txt_botao_limpar_e_liberar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        txt_botao_limpar_e_liberar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_botao_limpar_e_liberarActionPerformed(evt);
            }
        });

        txt_botao_calcular.setBackground(new java.awt.Color(153, 255, 153));
        txt_botao_calcular.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/calculator_add.png"))); // NOI18N
        txt_botao_calcular.setText("CALCULAR");
        txt_botao_calcular.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        txt_botao_calcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_botao_calcularActionPerformed(evt);
            }
        });

        txt_campo_resultado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/calculator_link.png"))); // NOI18N
        txt_campo_resultado.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "- RESULTADO -", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        txt_operacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        txt_operacao.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "- OPERAÇÃO -", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        txt_campo_valor1.setToolTipText("");
        txt_campo_valor1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "- VALOR 001 -", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        txt_campo_valor2.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "- VALOR 002 -", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        txt_campo_radiciacao.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "- RADICIAÇÃO -", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        txt_campo_potencia_base.setToolTipText("");
        txt_campo_potencia_base.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "- POTENCIA - [ BAS ] -", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        txt_campo_potencia_expoente.setToolTipText("");
        txt_campo_potencia_expoente.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true), "- POTENCIA - [ EXP ] -", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        javax.swing.GroupLayout txt_painel_principalLayout = new javax.swing.GroupLayout(txt_painel_principal);
        txt_painel_principal.setLayout(txt_painel_principalLayout);
        txt_painel_principalLayout.setHorizontalGroup(
            txt_painel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(txt_painel_principalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(txt_painel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(txt_painel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(txt_painel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(txt_painel_principalLayout.createSequentialGroup()
                                .addComponent(txt_campo_valor1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(txt_campo_valor2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(txt_painel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txt_botao_limpar_e_liberar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txt_campo_resultado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(txt_painel_principalLayout.createSequentialGroup()
                                    .addComponent(txt_botao_calcular, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                                    .addComponent(txt_operacao, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addComponent(txt_campo_radiciacao))
                    .addGroup(txt_painel_principalLayout.createSequentialGroup()
                        .addComponent(txt_campo_potencia_base, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txt_campo_potencia_expoente, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        txt_painel_principalLayout.setVerticalGroup(
            txt_painel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, txt_painel_principalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txt_campo_resultado, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86)
                .addGroup(txt_painel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_campo_valor1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_campo_valor2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_campo_radiciacao, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(txt_painel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_campo_potencia_base, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_campo_potencia_expoente, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(86, 86, 86)
                .addGroup(txt_painel_principalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_botao_calcular, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_operacao, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_botao_limpar_e_liberar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txt_menu_geral.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/script_gear.png"))); // NOI18N
        txt_menu_geral.setText("GERAL");

        txt_sub_item_sair.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        txt_sub_item_sair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/cancel.png"))); // NOI18N
        txt_sub_item_sair.setText("SAIR");
        txt_sub_item_sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_sub_item_sairActionPerformed(evt);
            }
        });
        txt_menu_geral.add(txt_sub_item_sair);

        txt_barra_de_menu_principal.add(txt_menu_geral);

        txt_menu_sobre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/information.png"))); // NOI18N
        txt_menu_sobre.setText("SOBRE");

        txt_sub_item_info.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        txt_sub_item_info.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/error.png"))); // NOI18N
        txt_sub_item_info.setText("INFO");
        txt_sub_item_info.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_sub_item_infoActionPerformed(evt);
            }
        });
        txt_menu_sobre.add(txt_sub_item_info);

        txt_barra_de_menu_principal.add(txt_menu_sobre);

        setJMenuBar(txt_barra_de_menu_principal);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txt_painel_principal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txt_painel_principal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    // BOTÃO CALCULAR:
    private void txt_botao_calcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_botao_calcularActionPerformed
    
        int confirmar_calculo = 0;
        int operacao1 = 0;
        String operacao2 = "";
        confirmar_calculo = 0;
        operacao1 = txt_operacao.getSelectedIndex();
        
        if( operacao1 == 0 ) { operacao2 = "DIVISÃO"; }
        if( operacao1 == 1 ) { operacao2 = "MULTIPLICAÇÃO"; }
        if( operacao1 == 2 ) { operacao2 = "POTÊNCIAÇÃO"; }
        if( operacao1 == 3 ) { operacao2 = "RADICIAÇÃO"; }
        if( operacao1 == 4 ) { operacao2 = "SOMA"; }
        if( operacao1 == 5 ) { operacao2 = "SUBTRAÇÃO"; }
        
        confirmar_calculo = JOptionPane.showConfirmDialog(null, "DESEJA CONTINUAR COM A " + operacao2 + " ?");

        if ( confirmar_calculo == 0 ) {

            // DIVISÃO:
            if( operacao1 == 0 ) { 
                
                if( !txt_campo_valor1.getText().trim().equals("") && !txt_campo_valor2.getText().trim().equals("")) {
                    
                    try {
                        
                        double val1 = 0;
                        double val2 = 0;
                        double resultado = 0;

                        val1 = Double.valueOf(txt_campo_valor1.getText());
                        val2 = Double.valueOf(txt_campo_valor2.getText());
                        resultado = val1 / val2;
                        BigDecimal arredondar_resultado = new BigDecimal(resultado).setScale(2, RoundingMode.HALF_EVEN);
                        txt_campo_resultado.setText(" " + String.valueOf(arredondar_resultado.doubleValue()));
                        
                        txt_botao_calcular.setEnabled(false);
                        txt_campo_valor1.setEditable(false);
                        txt_campo_valor2.setEditable(false);
                        txt_campo_radiciacao.setEditable(false);
                        txt_campo_potencia_base.setEditable(false);
                        txt_campo_potencia_expoente.setEditable(false);
                        txt_operacao.setEnabled(false);
                        txt_botao_limpar_e_liberar.setEnabled(true);
                        
                    } catch( NumberFormatException e) {
                        
                        JOptionPane.showMessageDialog(null, "PREENCHA OS CAMPOS COM DADOS CORRETOS!", "ADVERTÊNCIA:", 2);
                        txt_campo_valor1.setText("");
                        txt_campo_valor2.setText("");
                        
                }
                    
                } else {
                    
                    JOptionPane.showMessageDialog(null, "PREENCHA TODOS OS CAMPOS NECESSÁRIOS:\n"
                            + " - VALOR 001,\n"
                            + " - VALOR 002.", "ADVERTÊNCIA:", 2);
                    
                }
            
            }
            
            // MULTIPLICAÇÃO
            if( operacao1 == 1 ) { 
                
                if( !txt_campo_valor1.getText().trim().equals("") && !txt_campo_valor2.getText().trim().equals("")) {
                    
                    try {
                        
                        double val1 = 0;
                        double val2 = 0;
                        double resultado = 0;

                        val1 = Double.valueOf(txt_campo_valor1.getText());
                        val2 = Double.valueOf(txt_campo_valor2.getText());
                        resultado = val1 * val2;
                        BigDecimal arredondar_resultado = new BigDecimal(resultado).setScale(2, RoundingMode.HALF_EVEN);
                        txt_campo_resultado.setText(" " + String.valueOf(arredondar_resultado.doubleValue()));
                        
                        txt_botao_calcular.setEnabled(false);
                        txt_campo_valor1.setEditable(false);
                        txt_campo_valor2.setEditable(false);
                        txt_campo_radiciacao.setEditable(false);
                        txt_campo_potencia_base.setEditable(false);
                        txt_campo_potencia_expoente.setEditable(false);
                        txt_operacao.setEnabled(false);
                        txt_botao_limpar_e_liberar.setEnabled(true);
                        
                    } catch( NumberFormatException e) {
                        
                        JOptionPane.showMessageDialog(null, "PREENCHA OS CAMPOS COM DADOS CORRETOS!", "ADVERTÊNCIA:", 2);
                        txt_campo_valor1.setText("");
                        txt_campo_valor2.setText("");
                        
                }
                    
                } else {
                    
                    JOptionPane.showMessageDialog(null, "PREENCHA TODOS OS CAMPOS NECESSÁRIOS:\n"
                            + " - VALOR 001,\n"
                            + " - VALOR 002.", "ADVERTÊNCIA:", 2);
                    
                }
                
            }
            
            // POTENCIAÇÃO:
            if( operacao1 == 2 ) { 
                
                if( !txt_campo_potencia_base.getText().trim().equals("") && !txt_campo_potencia_expoente.getText().trim().equals("")) {
                    
                    try {
                        
                        double val1 = 0;
                        double val2 = 0;
                        double resultado = 0;

                        val1 = Double.valueOf(txt_campo_potencia_base.getText());
                        val2 = Double.valueOf(txt_campo_potencia_expoente.getText());
                        resultado = Math.pow(val1, val2);
                        BigDecimal arredondar_resultado = new BigDecimal(resultado).setScale(2, RoundingMode.HALF_EVEN);
                        txt_campo_resultado.setText(" " + String.valueOf(arredondar_resultado.doubleValue()));
                        
                        txt_botao_calcular.setEnabled(false);
                        txt_campo_valor1.setEditable(false);
                        txt_campo_valor2.setEditable(false);
                        txt_campo_radiciacao.setEditable(false);
                        txt_campo_potencia_base.setEditable(false);
                        txt_campo_potencia_expoente.setEditable(false);
                        txt_operacao.setEnabled(false);
                        txt_botao_limpar_e_liberar.setEnabled(true);
                        
                    } catch( NumberFormatException e) {
                        
                        JOptionPane.showMessageDialog(null, "PREENCHA OS CAMPOS COM DADOS CORRETOS!", "ADVERTÊNCIA:", 2);
                        txt_campo_potencia_base.setText("");
                        txt_campo_potencia_expoente.setText("");
                        
                }
                    
                } else {
                    
                    JOptionPane.showMessageDialog(null, "PREENCHA TODOS OS CAMPOS NECESSÁRIOS:\n"
                            + " - POTENCIA - [ BAS ],\n"
                            + " - POTENCIA - [ EXP ].", "ADVERTÊNCIA:", 2);
                    
                }
                
            }
            
            // RADICIAÇÃO:
            if( operacao1 == 3 ) { 
                
                if( !txt_campo_radiciacao.getText().trim().equals("")) {
                    
                    try {
                        
                        double val1 = 0;
                        double resultado = 0;

                        val1 = Double.valueOf(txt_campo_radiciacao.getText());
                        resultado = Math.sqrt(val1);
                        BigDecimal arredondar_resultado = new BigDecimal(resultado).setScale(2, RoundingMode.HALF_EVEN);
                        txt_campo_resultado.setText(" " + String.valueOf(arredondar_resultado.doubleValue()));
                        
                        txt_botao_calcular.setEnabled(false);
                        txt_campo_valor1.setEditable(false);
                        txt_campo_valor2.setEditable(false);
                        txt_campo_radiciacao.setEditable(false);
                        txt_campo_potencia_base.setEditable(false);
                        txt_campo_potencia_expoente.setEditable(false);
                        txt_operacao.setEnabled(false);
                        txt_botao_limpar_e_liberar.setEnabled(true);
                        
                    } catch( NumberFormatException e) {
                        
                        JOptionPane.showMessageDialog(null, "PREENCHA OS CAMPOS COM DADOS CORRETOS!", "ADVERTÊNCIA:", 2);
                        txt_campo_radiciacao.setText("");
                        
                }
                    
                } else {
                    
                    JOptionPane.showMessageDialog(null, "PREENCHA TODOS OS CAMPOS NECESSÁRIOS:\n"
                            + " - RADICIAÇÃO.", "ADVERTÊNCIA:", 2);
                    
                }
                
            }
            
            // ADIÇÃO:
            if( operacao1 == 4 ) { 
            
                if( !txt_campo_valor1.getText().trim().equals("") && !txt_campo_valor2.getText().trim().equals("")) {
                    
                    try {
                        
                        double val1 = 0;
                        double val2 = 0;
                        double resultado = 0;

                        val1 = Double.valueOf(txt_campo_valor1.getText());
                        val2 = Double.valueOf(txt_campo_valor2.getText());
                        resultado = val1 + val2;
                        BigDecimal arredondar_resultado = new BigDecimal(resultado).setScale(2, RoundingMode.HALF_EVEN);
                        txt_campo_resultado.setText(" " + String.valueOf(arredondar_resultado.doubleValue()));
                        
                        txt_botao_calcular.setEnabled(false);
                        txt_campo_valor1.setEditable(false);
                        txt_campo_valor2.setEditable(false);
                        txt_campo_radiciacao.setEditable(false);
                        txt_campo_potencia_base.setEditable(false);
                        txt_campo_potencia_expoente.setEditable(false);
                        txt_operacao.setEnabled(false);
                        txt_botao_limpar_e_liberar.setEnabled(true);
                        
                    } catch( NumberFormatException e) {
                        
                        JOptionPane.showMessageDialog(null, "PREENCHA OS CAMPOS COM DADOS CORRETOS!", "ADVERTÊNCIA:", 2);
                        txt_campo_valor1.setText("");
                        txt_campo_valor2.setText("");
                        
                }
                    
                } else {
                    
                    JOptionPane.showMessageDialog(null, "PREENCHA TODOS OS CAMPOS NECESSÁRIOS:\n"
                            + " - VALOR 001,\n"
                            + " - VALOR 002.", "ADVERTÊNCIA:", 2);
                    
                }
                
            }
            
            // SUBTRAÇÃO:
            if( operacao1 == 5 ) { 
                
                if( !txt_campo_valor1.getText().trim().equals("") && !txt_campo_valor2.getText().trim().equals("")) {
                    
                    try {
                        
                        double val1 = 0;
                        double val2 = 0;
                        double resultado = 0;

                        val1 = Double.valueOf(txt_campo_valor1.getText());
                        val2 = Double.valueOf(txt_campo_valor2.getText());
                        resultado = val1 - val2;
                        BigDecimal arredondar_resultado = new BigDecimal(resultado).setScale(2, RoundingMode.HALF_EVEN);
                        txt_campo_resultado.setText(" " + String.valueOf(arredondar_resultado.doubleValue()));
                        
                        txt_botao_calcular.setEnabled(false);
                        txt_campo_valor1.setEditable(false);
                        txt_campo_valor2.setEditable(false);
                        txt_campo_radiciacao.setEditable(false);
                        txt_campo_potencia_base.setEditable(false);
                        txt_campo_potencia_expoente.setEditable(false);
                        txt_operacao.setEnabled(false);
                        txt_botao_limpar_e_liberar.setEnabled(true);
                        
                    } catch( NumberFormatException e) {
                        
                        JOptionPane.showMessageDialog(null, "PREENCHA OS CAMPOS COM DADOS CORRETOS!", "ADVERTÊNCIA:", 2);
                        txt_campo_valor1.setText("");
                        txt_campo_valor2.setText("");
                        
                }
                    
                } else {
                    
                    JOptionPane.showMessageDialog(null, "PREENCHA TODOS OS CAMPOS NECESSÁRIOS:\n"
                            + " - VALOR 001,\n"
                            + " - VALOR 002.", "ADVERTÊNCIA:", 2);
                    
                }
                
            }
            
        }

    }//GEN-LAST:event_txt_botao_calcularActionPerformed

    
    // BOTÃO LIMPAR E LIBERAR:
    private void txt_botao_limpar_e_liberarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_botao_limpar_e_liberarActionPerformed
        
        txt_campo_resultado.setText(null);
        txt_botao_calcular.setEnabled(true);
        txt_campo_valor1.setEditable(true);
        txt_campo_valor2.setEditable(true);
        txt_campo_radiciacao.setEditable(true);
        txt_campo_potencia_base.setEditable(true);
        txt_campo_potencia_expoente.setEditable(true);
        txt_operacao.setEnabled(true);
        txt_botao_limpar_e_liberar.setEnabled(false);
        
    }//GEN-LAST:event_txt_botao_limpar_e_liberarActionPerformed

    
    // SUB ITEM DE MENU - SAIR - [ MENU GERAL ]:
    private void txt_sub_item_sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_sub_item_sairActionPerformed
        
        int confirmar_sair = 0;
        confirmar_sair = 0;
        confirmar_sair = JOptionPane.showConfirmDialog(null, "REALMENTE DESEJA SAIR ?");

        if ( confirmar_sair == 0 ) {

            this.dispose();

        }

    }//GEN-LAST:event_txt_sub_item_sairActionPerformed

    
    // SUB ITEM DE MENU - INFO - [ MENU SOBRE ]:
    private void txt_sub_item_infoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_sub_item_infoActionPerformed
        
        JOptionPane.showMessageDialog(null, "PROJETO DE CALCULOS QUE CONSISTE EM:\n"
                + " - DIVISÃO,\n"
                + " - MULTIPLICAÇÃO,\n"
                + " - POTÊNCIAÇÃO,\n"
                + " - RADICIAÇÃO,\n"
                + " - SOMA,\n"
                + " - SUBTRAÇÃO.", "INFORMAÇÃO:", 1);
        
    }//GEN-LAST:event_txt_sub_item_infoActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SimpleCalculatorJavaObjectForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SimpleCalculatorJavaObjectForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SimpleCalculatorJavaObjectForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SimpleCalculatorJavaObjectForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SimpleCalculatorJavaObjectForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar txt_barra_de_menu_principal;
    private javax.swing.JButton txt_botao_calcular;
    private javax.swing.JButton txt_botao_limpar_e_liberar;
    private javax.swing.JTextField txt_campo_potencia_base;
    private javax.swing.JTextField txt_campo_potencia_expoente;
    private javax.swing.JTextField txt_campo_radiciacao;
    private javax.swing.JLabel txt_campo_resultado;
    private javax.swing.JTextField txt_campo_valor1;
    private javax.swing.JTextField txt_campo_valor2;
    private javax.swing.JMenu txt_menu_geral;
    private javax.swing.JMenu txt_menu_sobre;
    private javax.swing.JComboBox<String> txt_operacao;
    private javax.swing.JPanel txt_painel_principal;
    private javax.swing.JMenuItem txt_sub_item_info;
    private javax.swing.JMenuItem txt_sub_item_sair;
    // End of variables declaration//GEN-END:variables
}




